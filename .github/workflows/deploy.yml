name: Old deployment of backend

on:
  workflow_call:
    inputs:
      BRANCH:
        required: true
        type: string
      BASE_BACKEND_PORT:
        required: true
        type: number
      VIRTUOSO_PORT:
        required: true
        type: number
      PR_NUMBER:
        required: false
        type: number
        default: 0
      FRONTEND_BRANCH:
        required: false
        type: string
        default: ''
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      SSH_HOST:
        required: true
      SSH_USER:
        required: true
      AUTH_SECRET:
        required: true
      IMPERSONATION_PASSWORD:
        required: true
      SPARQL_HOST:
        required: true
      SPARQL_USER:
        required: true
      SPARQL_PASSWORD:
        required: true
      SUPER_ADMIN_NAME:
        required: true
      SUPER_ADMIN_EMAIL:
        required: true
      SUPER_ADMIN_PASSWORD:
        required: true
      JDBC_PORT:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set TAG for backend docker image
        run: echo "TAG=courses:${{ inputs.BRANCH }}" >> $GITHUB_ENV
      - name: Set CONTAINER for backend docker container
        run: echo "CONTAINER=courses-${{ inputs.BRANCH }}" >> $GITHUB_ENV
      - name: Set branch when called from backend
        if: ${{ inputs.FRONTEND_BRANCH == ''}}
        run: echo "BRANCH=${{ inputs.BRANCH }}" >> $GITHUB_ENV
      - name: Set branch when called from frontend
        if: ${{ inputs.FRONTEND_BRANCH != ''}}
        run: echo "BRANCH=${{ inputs.FRONTEND_BRANCH }}" >> $GITHUB_ENV
      - name: Set GRAPH_IRI_PREFIX for non master branch
        if: ${{ inputs.BRANCH != 'master'}}
        run: echo "GRAPH_IRI_PREFIX=${{ inputs.BRANCH }}.dev" >> $GITHUB_ENV
      - name: Set GRAPH_IRI_PREFIX for master branch
        if: ${{ inputs.BRANCH == 'master'}}
        run: echo "GRAPH_IRI_PREFIX=" >> $GITHUB_ENV    
      - name: Set PR port part
        run: echo "PR_PORT_PART=$(printf "%03i" ${{ inputs.PR_NUMBER }} | tail -c 4)" >> $GITHUB_ENV
      - name: Calculate backend port
        run: echo "BACKEND_PORT=$(expr ${{ inputs.BASE_BACKEND_PORT }} + ${{ env.PR_PORT_PART }})" >> $GITHUB_ENV
      - name: Running docker skript 
        uses: appleboy/ssh-action@master
        env:
          TAG: ${{ env.TAG }}
          CONTAINER: ${{ env.CONTAINER }}
          BRANCH: ${{ env.BRANCH }}
          BACKEND_PORT: ${{ env.BACKEND_PORT }}
          VIRTUOSO_PORT: ${{ inputs.VIRTUOSO_PORT }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          GRAPH_IRI_PREFIX: ${{ env.GRAPH_IRI_PREFIX }}
          IMPERSONATION_PASSWORD: ${{ secrets.IMPERSONATION_PASSWORD }}
          SPARQL_HOST: ${{ secrets.SPARQL_HOST }}
          SPARQL_USER: ${{ secrets.SPARQL_USER }}
          SPARQL_PASSWORD: ${{ secrets.SPARQL_PASSWORD }}
          SUPER_ADMIN_NAME: ${{ secrets.SUPER_ADMIN_NAME }}
          SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}
          SUPER_ADMIN_PASSWORD: ${{ secrets.SUPER_ADMIN_PASSWORD }}
          JDBC_PORT: ${{ secrets.JDBC_PORT }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: TAG,CONTAINER,BRANCH,BACKEND_PORT,SPARQL_HOST,SPARQL_USER,SPARQL_PASSWORD,VIRTUOSO_PORT,AUTH_SECRET,GRAPH_IRI_PREFIX,IMPERSONATION_PASSWORD,SUPER_ADMIN_NAME,SUPER_ADMIN_EMAIL,SUPER_ADMIN_PASSWORD,JDBC_PORT
          script: |
            TMP=$(mktemp -d tmpXXX)
            cd ${TMP}
            git clone --branch "${BRANCH}" https://github.com/matfyz-sk/courses-backend.git
            docker build -t ${TAG} courses-backend
            docker stop ${CONTAINER}
            docker rm -f ${CONTAINER}
            ~virtuoso/bin/backup-graph.sh \
              "https://${GRAPH_IRI_PREFIX}courses3.matfyz.sk/" \
              "https://courses3.matfyz.sk/ontology" \
              "https://courses3.matfyz.sk/data" \
              "${GRAPH_IRI_PREFIX}courses3"
            docker run --detach \
              --env "SPARQL_ENDPOINT=http://${SPARQL_HOST}:${VIRTUOSO_PORT}/sparql" \
              --env "SPARQL_USER=${SPARQL_USER}" \
              --env "SPARQL_PASSWORD=${SPARQL_PASSWORD}" \
              --env "AUTH_SECRET=${AUTH_SECRET}" \
              --env "GRAPH_IRI=https://${GRAPH_IRI_PREFIX}courses3.matfyz.sk/" \
              --env "BASE_IRI=https://courses3.matfyz.sk/" \
              --env "IMPERSONATION_PASSWORD=${IMPERSONATION_PASSWORD}" \
              --env "SUPER_ADMIN_NAME=${SUPER_ADMIN_NAME}" \
              --env "SUPER_ADMIN_EMAIL=${SUPER_ADMIN_EMAIL}" \
              --env "SUPER_ADMIN_PASSWORD=${SUPER_ADMIN_PASSWORD}" \
              --env "VIRTUOSO_JDBC_PORT=${JDBC_PORT}" \
              --name=${CONTAINER} \
              --publish ${BACKEND_PORT}:3010 \
              --restart=unless-stopped \
              ${TAG}
            cd ..
            rm -dfr ${TMP}
